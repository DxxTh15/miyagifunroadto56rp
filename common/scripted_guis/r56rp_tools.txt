scripted_gui = {

	r56rp_tools_container_button = {
		context_type = player_context

		window_name = "r56rp_tools_container_button"
		parent_window_token = top_bar

		visible = {
			ROOT = {
				always = yes
				is_ai = no
			}
		}

		effects = {
			r56rp_tolcon_showhide_click = {
				ROOT = { 
					IF = {
						limit = {
							has_variable = show_combined_rptools_list
						}
						clear_variable = show_combined_rptools_list
					}
					ELSE = {
						set_variable = { show_combined_rptools_list = 1 } 
					}
				}
			}
		}
		triggers = {
			r56rp_tolcon_showhide_click_enabled = {
				always = yes
			}
		}
	}
	
	r56rp_tools_container = {
		context_type = player_context
		window_name = "r56rp_tools_container"
		visible = {
			ROOT = {
				check_variable = { show_combined_rptools_list = 1 }
				is_ai = no
			}
		}
		effects = {
			# RTT Button
			rt_button_topbar_click = {
				ROOT = { 
					IF = {
						limit = {
							has_variable = rt_status
						}
						clear_variable = rt_status
					}
					ELSE = {
						set_variable = { rt_status = 1 }
						clr_country_flag = transfer_enabled
						clr_country_flag = hosttool_enabled
					}
				}
			}
			# STT Button
			open_ST_click = {
				if = {
					limit = {
						ROOT = {
							has_country_flag = transfer_enabled
						}
					}
					ROOT = { clr_country_flag = transfer_enabled }
				}
				else = {
					ROOT = { set_country_flag = transfer_enabled }
					clear_variable = rt_status
					clr_country_flag = hosttool_enabled
				}
			}
			hide_ST_click = { #investigation required on just wtf this thing actualy does
				if = {
					limit = { NOT = { has_country_flag = hidden_switch } }
					set_country_flag = hidden_switch
				}
				else = {
					clr_country_flag = hidden_switch
				}
			}
			# HTool
			tool_open_click = {
				if = {
					limit = { 
						ROOT = { 
							has_country_flag = hosttool_enabled 
						} 
					}
					ROOT = { clr_country_flag = hosttool_enabled }
				}
				else = {
					ROOT = { set_country_flag = hosttool_enabled }
					clr_country_flag = transfer_enabled
					clear_variable = rt_status
				}
			}
		}
		triggers = {
			rt_button_topbar_click_enabled = {
				always = yes
			}
			hide_ST_click_enabled = {
				always = yes
			}
			open_ST_click_enabled = {
				always = yes
			}
			tool_open_click_enabled = {
				always = yes
			}
			tool_open_visible = {
				OR = {
					is_debug = yes
					has_country_flag = host
				}
				NOT = { has_country_flag = hidden_switch }
			}
			ht_title_visible = {
				OR = {
					is_debug = yes
					has_country_flag = host
				}
				NOT = { has_country_flag = hidden_switch }
			}
		}
	}

	r56rp_selected_states_array = {
		context_type = selected_state_context
		parent_window_name = "r56rp_tools_container"
		window_name = "r56rp_tool_state_selection_window"

		visible = {
			ROOT = {
				check_variable = { show_combined_rptools_list = 1 }
				is_ai = no
			}
		}
		dynamic_lists = {
			r56rp_tool_state_selection_grid_box = {
				array = ROOT.r56rp_tool_state_array
				value = v
				index = i
				change_scope = no
				entry_container = "r56rp_tool_state_selection_array"
			}
		}
		effects = {
			# purge button to clear the state selection array
			r56rp_tool_state_selection_button_1_click = {
				clear_array = ROOT.r56rp_tool_state_array
			}
			# one button to mark and unmark states.
			# localisation is handled via scripted
			r56rp_tool_state_selection_button_2_click = {
				IF = {
					limit = {
						is_in_array = {
							array = ROOT.r56rp_tool_state_array
							value = THIS.id
						}
					}
					remove_from_array = { 
						array = ROOT.r56rp_tool_state_array
						value = THIS.id
					}
				}
				ELSE = {
					add_to_array = { 
						array = ROOT.r56rp_tool_state_array
						value = THIS.id 
					}
				}
			}
			r56rp_tool_state_selection_click = {
				remove_from_array = { 
					array = ROOT.r56rp_tool_state_array
					index = i
				}
			}
		}
		triggers = {
		}
	}

	# Resource Transfer Tool
	rt_menu_container = {
		context_type = selected_state_context

		parent_window_name = r56rp_tools_container
		window_name = "rt_menu_container"

		visible = {
			ROOT = {
				check_variable = { rt_status = 1 }
			}
		}
		effects = {
			add_rights_button_click = {
				ROOT = {
					set_country_flag = rt_waiting
				}
				if = {
					limit = {
						check_variable = { ROOT.swap_sides = 0}
					}
					
					THIS.owner = {
						country_event = rt.1
					}
				}
				else_if = {
					limit = {
						check_variable = { ROOT.swap_sides = 1}
					}
					THIS.owner = {
						country_event = rt.2
					}
				}
			}
			swap_sides_click = {
				ROOT = {
					#resources
						set_variable = { aluminium_selected = 1 }
						set_variable = { oil_selected = 1 }
						set_variable = { rubber_selected = 1 }
						set_variable = { steel_selected = 1 }
						set_variable = { chromium_selected = 1 }
						set_variable = { tungsten_selected = 1 }
						
						set_variable = { aluminium_ammount = 0 }
						set_variable = { oil_ammount = 0 }
						set_variable = { rubber_ammount = 0 }
						set_variable = { steel_ammount = 0 }
						set_variable = { chromium_ammount = 0 }
						set_variable = { tungsten_ammount = 0 }

						clear_array = resource_list

					set_variable = { state_lock = 1 }
					if = {
						limit = { check_variable = { swap_sides = 0 } } 
						set_variable = { swap_sides = 1 }
					}
					else_if = {
						limit = { check_variable = { swap_sides = 1 } } 
						set_variable = { swap_sides = 0 }
					}
					else = {
						set_variable = { swap_sides = 1 } 
					}	
				}
			}
			state_lock_click = {
				ROOT = {
					#resources
						set_variable = { aluminium_selected = 1 }
						set_variable = { oil_selected = 1 }
						set_variable = { rubber_selected = 1 }
						set_variable = { steel_selected = 1 }
						set_variable = { chromium_selected = 1 }
						set_variable = { tungsten_selected = 1 }

						set_variable = { aluminium_ammount = 0 }
						set_variable = { oil_ammount = 0 }
						set_variable = { rubber_ammount = 0 }
						set_variable = { steel_ammount = 0 }
						set_variable = { chromium_ammount = 0 }
						set_variable = { tungsten_ammount = 0 }

						clear_array = resource_list

					if = {
						limit = { check_variable = { state_lock = 1 } } 
						set_variable = { state_lock = 2 }
						set_variable = { state_lock_id = PREV }

						set_variable = { aluminium_ammount = PREV.resource@aluminium }
						set_variable = { oil_ammount = PREV.resource@oil }
						set_variable = { rubber_ammount = PREV.resource@rubber }
						set_variable = { steel_ammount = PREV.resource@steel }
						set_variable = { chromium_ammount = PREV.resource@chromium }
						set_variable = { tungsten_ammount = PREV.resource@tungsten }
						
					}
					else_if = {
						limit = { check_variable = { state_lock = 2 } }
						set_variable = { state_lock = 1 }
						clear_variable = state_lock_id
					}
					else = {
						set_variable = { state_lock = 2 }
						set_variable = { state_lock_id = PREV }

						set_variable = { aluminium_ammount = PREV.resource@aluminium }
						set_variable = { oil_ammount = PREV.resource@oil }
						set_variable = { rubber_ammount = PREV.resource@rubber }
						set_variable = { steel_ammount = PREV.resource@steel }
						set_variable = { chromium_ammount = PREV.resource@chromium }
						set_variable = { tungsten_ammount = PREV.resource@tungsten }
					}	
				}
			}
			#resources
				resource_button_aluminium_click = {
					ROOT = {
						if = {
							limit = { check_variable = { aluminium_selected = 1 } } 
							set_variable = { aluminium_selected = 2 }
							add_to_array = { resource_list = 2}
						}
						else_if = {
							limit = { check_variable = { aluminium_selected = 2 } }
							set_variable = { aluminium_selected = 1 }
							remove_from_array = { resource_list = 2 }
						}
						else = {
							set_variable = { aluminium_selected = 2 }
							add_to_array = { resource_list = 2 }
						}	
					}
				}
				resource_button_oil_click = {
					ROOT = {
						if = {
							limit = { check_variable = { oil_selected = 1 } } 
							set_variable = { oil_selected = 2 }
							add_to_array = { resource_list = 1 }
						}
						else_if = {
							limit = { check_variable = { oil_selected = 2 } }
							set_variable = { oil_selected = 1 }
							remove_from_array = { resource_list = 1 }
						}
						else = {
							set_variable = { oil_selected = 2 }
							add_to_array = { resource_list = 1 }
						}	
					}
				}
				resource_button_steel_click = {
					ROOT = {
						if = {
							limit = { check_variable = { ROOT.steel_selected = 1 } } 
							set_variable = { ROOT.steel_selected = 2 }
							add_to_array = { resource_list = 5 }
						}
						else_if = {
							limit = { check_variable = { ROOT.steel_selected = 2 } }
							set_variable = { ROOT.steel_selected = 1 }
							remove_from_array = { resource_list = 5 }
						}
						else = {
							set_variable = { ROOT.steel_selected = 2 }
							add_to_array = { resource_list = 5 }
						}	
					}
				}
				resource_button_rubber_click = {
					ROOT = {
						if = {
							limit = { check_variable = { rubber_selected = 1 } } 
							set_variable = { rubber_selected = 2 }
							add_to_array = { resource_list = 3}
						}
						else_if = {
							limit = { check_variable = { rubber_selected = 2 } }
							set_variable = { rubber_selected = 1 }
							remove_from_array = { resource_list = 3 }
						}
						else = {
							set_variable = { rubber_selected = 2 }
							add_to_array = { resource_list = 3}
						}	
					}
				}
				resource_button_tungsten_click = {
					ROOT = {
						if = {
							limit = { check_variable = { tungsten_selected = 1 } } 
							set_variable = { tungsten_selected = 2 }
							add_to_array = { resource_list = 4}
						}
						else_if = {
							limit = { check_variable = { tungsten_selected = 2 } }
							set_variable = { tungsten_selected = 1 }
							remove_from_array = { resource_list = 4 }
						}
						else = {
							set_variable = { tungsten_selected = 2 }
							add_to_array = { resource_list = 4}
						}	
					}
				}
				resource_button_chromium_click = {
					ROOT = {
						if = {
							limit = { check_variable = { ROOT.chromium_selected = 1 } } 
							set_variable = { ROOT.chromium_selected = 2 }
							add_to_array = { resource_list = 6}
						}
						else_if = {
							limit = { check_variable = { ROOT.chromium_selected = 2 } }
							set_variable = { ROOT.chromium_selected = 1 }
							remove_from_array = { resource_list = 6 }
						}
						else = {
							set_variable = { ROOT.chromium_selected = 2 }
							add_to_array = { resource_list = 6}
						}	
					}
				}

		}
		triggers = {
			add_rights_button_click_enabled = {
				NOT = {
					ROOT = {
						has_country_flag = rt_waiting
					}
				}
				
				OR = {
					AND = {
						NOT = {
							check_variable = {
								THIS.owner = ROOT
							}
						}
						THIS.owner = {
							owns_state = root.state_lock_id
						}
					}
						NOT = {
							check_variable = {
								THIS.owner = ROOT
							}
							THIS.owner = {
								owns_state = root.state_lock_id
							}
						}
				}
				
				
				
				check_variable = {
					ROOT.state_lock = 2
				}
				check_variable = {
					ROOT.resource_list^num > 0
				}
			}
			swap_sides_click_enabled = {
				NOT = {
					ROOT = {
						has_country_flag = rt_waiting
					}
				}
				always = yes
			}
			state_lock_click_enabled = {
				NOT = {
					ROOT = {
						has_country_flag = rt_waiting
					}
				}
				OR = {
					AND = {
						check_variable = {
							THIS.owner = ROOT
						}
						check_variable = {
							ROOT.swap_sides = 1
						}
					}
					AND = {
						NOT = {
							check_variable = {
								THIS.owner = ROOT
							}
						}
						check_variable = {
							ROOT.swap_sides = 0
						}
					}
				}		
			}
			#resources
				resource_button_aluminium_click_enabled = {
					NOT = {
						ROOT = {
							has_country_flag = rt_waiting
						}
					}
					check_variable = {
						ROOT.state_lock = 2
					}
					check_variable = {
						THIS = ROOT.state_lock_id
					}
					check_variable = {
						THIS.resource@aluminium > 0
					}
				}
				resource_button_oil_click_enabled = {
					NOT = {
						ROOT = {
							has_country_flag = rt_waiting
						}
					}
					check_variable = {
						ROOT.state_lock = 2
					}
					check_variable = {
						THIS = ROOT.state_lock_id
					}
					check_variable = {
						THIS.resource@oil > 0
					}
				}
				resource_button_steel_click_enabled = {
					NOT = {
						ROOT = {
							has_country_flag = rt_waiting
						}
					}
					check_variable = {
						ROOT.state_lock = 2
					}
					check_variable = {
						THIS = ROOT.state_lock_id
					}
					check_variable = {
						THIS.resource@steel > 0
					}
				}
				resource_button_rubber_click_enabled = {
					NOT = {
						ROOT = {
							has_country_flag = rt_waiting
						}
					}
					check_variable = {
						ROOT.state_lock = 2
					}
					check_variable = {
						THIS = ROOT.state_lock_id
					}
					check_variable = {
						THIS.resource@rubber > 0
					}
				}
				resource_button_tungsten_click_enabled = {
					NOT = {
						ROOT = {
							has_country_flag = rt_waiting
						}
					}
					check_variable = {
						ROOT.state_lock = 2
					}
					check_variable = {
						THIS = ROOT.state_lock_id
					}
					check_variable = {
						THIS.resource@tungsten > 0
					}
				}
				resource_button_chromium_click_enabled = {
					NOT = {
						ROOT = {
							has_country_flag = rt_waiting
						}
					}
					check_variable = {
						ROOT.state_lock = 2
					}
					check_variable = {
						THIS = ROOT.state_lock_id
					}
					check_variable = {
						THIS.resource@chromium > 0
					}
				}
		}
		properties = {
			#resources
				resource_button_aluminium = {
					frame = ROOT.aluminium_selected
				}
				resource_button_oil = {
					frame = ROOT.oil_selected
				}
				resource_button_steel = {
					frame = ROOT.steel_selected
				}
				resource_button_rubber = {
					frame = ROOT.rubber_selected
				}
				resource_button_tungsten = {
					frame = ROOT.tungsten_selected
				}
				resource_button_chromium = {
					frame = ROOT.chromium_selected
				}

			state_lock = {
				frame = ROOT.state_lock
			}
			TAG_1 = {
				image = [receiver_img]
			}
			TAG_2 = {
				image = [provider_img]
			}
		}
	}

	# State Transfer Tool

	st_country_powers = {
	
		context_type = selected_country_context

		parent_window_name = r56rp_tools_container
		
		window_name = "st_subject_powers_container"
		
		visible = {
			ROOT = {
				is_ai = no
				has_country_flag = transfer_enabled
			}
		}
		
		effects = {
		
			mark_all_states_click = {
				# purge array from shit that is already there
				clear_array = ROOT.r56rp_tool_state_array
				
				var:marks = {
					every_owned_state = {
						limit = {
							NOT = { 
								is_in_array = {
									array = ROOT.r56rp_tool_state_array
									value = THIS.id
								} 
							}
						}
						add_to_array = {
							array = ROOT.r56rp_tool_state_array
							value = THIS.id
						} 
					}
				}
			}
		
			mark_colonial_states_click  = {
				set_temp_variable = { ROOT.marks = this}
				var:marks = {
					every_owned_state = {
						limit = {
							NOT = { is_in_home_area = yes }
							NOT = { is_core_of = PREV }
							NOT = { has_state_flag = marked_for_transfer }
						}
						set_state_flag = marked_for_transfer
						add_to_variable = { ROOT.marked_states = 1 }
						#set_border_war = yes
					}
				}
			}
			
			award_states_click = {
				set_temp_variable = { ROOT.taker = this}
				
				every_state = {
					limit = {
						is_in_array = {
							array = ROOT.r56rp_tool_state_array
							value = THIS.id
						}
						OR = {
							is_owned_and_controlled_by = ROOT
							any_country = {
								is_ai = yes
								is_subject_of = ROOT
								owns_state = PREV
							}
						}
					}


					IF = {
						limit = {
							owner = {
								all_owned_state = {
									is_in_array = {
										array = ROOT.r56rp_tool_state_array
										value = THIS.id
									}
								}
							}
						}
						# couldnt get the annex_country to work, so this is a workaround.
						owner = {
							transfer_units_fraction= {
								target = var:taker
								size = 1
								keep_unit_leaders_trigger = {
									always = yes
								}
							}
						}
						var:taker = { transfer_state = PREV }
					}
					ELSE = {
						var:taker = { transfer_state = PREV }
					}
				}
				# only clean the array after you transfer all the states/army
				clear_array = ROOT.r56rp_tool_state_array
			}
		}
		
		triggers = {
		
			mark_all_states_click_enabled = {
				ROOT = {
					has_offensive_war = no
				}
			}
		
			mark_colonial_states_click_enabled = {
				ROOT = {
					has_offensive_war = no
				}
				any_owned_state = {
					NOT = { is_in_home_area = yes }
					NOT = { has_state_flag = marked_for_transfer }
					NOT = { is_core_of = this }
				}
			}
			
			mark_colonial_states_visible = {
				set_temp_variable = { ROOT.taker = this}
				OR = {
					ROOT = {
						tag = var:taker
					}
					AND = {
						has_game_rule = {
							rule = allow_subject_transfers
							option = FREE
						}
						any_country = {
							is_ai = yes
							is_subject_of = ROOT
						}
					}
					AND = {
						has_game_rule = {
							rule = allow_subject_transfers
							option = LOW_AUTONOMY_ONLY
						}
						any_country = {
							is_ai = yes
							is_subject_of = ROOT
							compare_autonomy_state < autonomy_colony
						}
					}
				}
			}
		
			award_states_click_enabled = {
				ROOT = {
					has_offensive_war = no
				}
				PREV = {
					has_offensive_war = no
				}
			}
		
		}
        
	}

	st_give_state = {
	
		context_type = decision_category
		window_name = "st_give_state"
		
		visible = {
			ROOT = {
				is_ai = no  
			}
		}
		
		dynamic_lists = {
			# name of the grid box gui element
			st_state_grid = {
				array = ROOT.owned_controlled_states
				change_scope = yes
				entry_container = "[st_give_state_entry_loc]" 
			}
		}
		
		effects = {
			st_mark_click = {
				THIS = { 
					set_state_flag = marked_for_transfer 
				}
				add_to_variable = { ROOT.marked_states = 1 }
			}
			
			st_unmark_click = {
				THIS = { 
					clr_state_flag = marked_for_transfer 
				}
				subtract_from_variable = { ROOT.marked_states = 1 }
			}
			
			mark_all_states_click = {
				ROOT = {
					every_owned_state = {
						limit = {
							NOT = { has_state_flag = marked_for_transfer }
						}
						set_state_flag = marked_for_transfer
						add_to_variable = { ROOT.marked_states = 1 }
					}
				}
			}
		
			mark_colonial_states_click  = {
				ROOT = {
					every_owned_state = {
						limit = {
							NOT = { is_in_home_area = yes }
							NOT = { is_core_of = PREV }
							NOT = { has_state_flag = marked_for_transfer }
						}
						set_state_flag = marked_for_transfer
						add_to_variable = { ROOT.marked_states = 1 }
					}
				}
			}
			
		}
		
		triggers = {
			
			mark_all_states_click_enabled = {
				ROOT = { 
					any_owned_state = {
						NOT = { has_state_flag = marked_for_transfer }
					}
				}
			}
		
			mark_colonial_states_click_enabled = {
				ROOT = { 
					any_owned_state = {
						NOT = { is_in_home_area = yes }
						NOT = { has_state_flag = marked_for_transfer }
						NOT = { is_core_of = ROOT }
						is_fully_controlled_by = ROOT
					}
				}
			}
		
		}
        
	}

	st_take_state = {
	
		context_type = decision_category
		window_name = "st_take_state"
		
		visible = {
			ROOT = {
				is_ai = no  
			}
		}
		
		dynamic_lists = {
			# name of the grid box gui element
			st_state_grid = {
				array = owned_controlled_states
				change_scope = yes
				entry_container = "[st_give_state_entry_loc]" 
			}
		}
		
		effects = {
			st_mark_click = {
				THIS = { 
					set_state_flag = marked_for_transfer 
				}
				add_to_variable = { ROOT.marked_states = 1 }
			}
			
			st_unmark_click = {
				THIS = { 
					clr_state_flag = marked_for_transfer 
				}
				subtract_from_variable = { ROOT.marked_states = 1 }
			}
			
		}
		
		triggers = {
			
			mark_all_states_visible = {
				always = no
			}
		
			mark_colonial_states_visible = {
				always = no
			}
			
			clear_all_markings_click_enabled = {
				check_variable = { ROOT.marked_states > 0 }
			}
		
		}
        
	}

	# Host Tool
	host_country_powers = {

		context_type = selected_state_context
		parent_window_name = r56rp_tools_container
		window_name = "hosttool_container"

		visible = {
			ROOT = {
				OR = {
					is_debug = yes #cause fuck doing the game option
					has_country_flag = host
				}
				has_country_flag = hosttool_enabled
			}
		}

		effects = {

			ht_TAG_1_click = {
				# lock first flag
				set_variable = {
					var = ROOT.r56rp_ht_tag_1
					value = THIS.owner
				}
			}

			ht_TAG_2_click = {
				# lock second flag
				set_variable = {
					var = ROOT.r56rp_ht_tag_2
					value = THIS.owner
				}
			}

			ht_swap_sides_click = {
				set_temp_variable = { r56rp_ht_swap_1 = ROOT.r56rp_ht_tag_1}
				set_temp_variable = { r56rp_ht_swap_2 = ROOT.r56rp_ht_tag_2}
				set_variable = { ROOT.r56rp_ht_tag_1 = r56rp_ht_swap_2 }
				set_variable = { ROOT.r56rp_ht_tag_2 = r56rp_ht_swap_1 }
			}

			## buttons using the ht_tag's for targeting.
			
			whitepeace_selected_click  = {
				ROOT.r56rp_ht_tag_2 = {
					set_temp_variable = { ROOT.marks = this}
					var:marks = {
						declare_war_on = { target = JAM type = annex_everything }
						every_enemy_country = { white_peace = PREV }
					}
				}
			}
			
			annex_country_click = {

				owner={
					set_variable = { ROOT.taker = this}}
				var:ROOT.host_marked_states^0={owner={set_variable={ROOT.target=this}}}
				if={
					limit={check_variable={ROOT.target=ROOT.taker}}
				}
				else={
					var:ROOT.target={
						var:ROOT.taker={
							GER = {
								news_event={id=hosttool.3}
							}
							annex_country={
								target=PREV
								transfer_troops=no
								}}}}	

				ROOT = {
					for_each_scope_loop={
						array=host_marked_states
						clear_variable=host_mark_status
					}
					clear_array=host_marked_states
					clear_variable=target
					clear_variable=taker
					clear_variable=first_marked_state
				}
			}

			puppet_country_click = {
				owner={
					set_variable = { ROOT.taker = this}}
				var:ROOT.host_marked_states^0={owner={set_variable={ROOT.target=this}}}
				if={
					limit={check_variable={ROOT.target=ROOT.taker}}
				}
				else={
					var:ROOT.target={
						var:ROOT.taker={
							GER = {
								news_event={id=hosttool.6}
							}
							puppet=PREV
						}
					}
				}

				ROOT = {
					for_each_scope_loop={
						array=host_marked_states
						clear_variable=host_mark_status
					}
					clear_array=host_marked_states
					clear_variable=target
					clear_variable=taker
					clear_variable=first_marked_state
				}

			}
			

			## buttons using only the currently selected state as a target
			whitepeace_click  = {
				owner={
					set_temp_variable = { ROOT.marks = this}
					var:marks = {
						declare_war_on = { target = JAM type = annex_everything }
						every_enemy_country = { white_peace = PREV }
					}
				}
			}

			observer_click = { 
				owner = {
					set_temp_variable = { ROOT.marks = this}
					GER = {
						news_event={id=hosttool.5}
					}
					JAM = {change_tag_from =var:marks}
				}
			}

			free_country_click = { 
				owner = {
					set_country_flag = puppetee
					OVERLORD = {
						set_temp_variable = { ROOT.puppeteer = this}
					}
				}
					every_country = {
						limit = { has_country_flag = puppetee }
							GER = {
								news_event={id=hosttool.7}
							}
							var:puppeteer = {
								set_autonomy = {
									target = PREV
									autonomy_state = autonomy_free
								}
							}
						clr_country_flag = puppetee
					}
			}

			clear_all_markings_click = {
				ROOT = {
					for_each_scope_loop={
						array=host_marked_states
						clear_variable=host_mark_status
					}
					clear_array=host_marked_states
				}

			}

			award_states_click = {
				every_state = {
					limit = {
						is_in_array = {
							array = ROOT.r56rp_tool_state_array
							value = THIS.id
						}
					}
					transfer_state_to = PREV.owner
				}
			} 

			add_cheat_click = {
				set_variable = { ROOT.taker = this}
				var:taker = {
					owner={
						set_variable={Root.target_country = this}
						if={limit={check_variable={Root.selected_cheat=1}} add_offsite_building = { type = arms_factory level = 1 }}
						if={limit={check_variable={Root.selected_cheat=2}} add_offsite_building = { type = arms_factory level = -1 }}
						if={limit={check_variable={Root.selected_cheat=3}} add_offsite_building = { type = industrial_complex level = 1 }}
						if={limit={check_variable={Root.selected_cheat=4}} add_offsite_building = { type = industrial_complex level = -1 }}
						if={limit={check_variable={Root.selected_cheat=5}} add_political_power = 50 }
						if={limit={check_variable={Root.selected_cheat=6}} add_political_power = -50 }
						if={limit={check_variable={Root.selected_cheat=7}} army_experience = 50 }
						if={limit={check_variable={Root.selected_cheat=8}} air_experience = 50 }
						if={limit={check_variable={Root.selected_cheat=9}} navy_experience = 50 }
						}
					}
				GER = {
					set_variable={this.target_country=Root.target_country}
					set_variable={this.selected_cheat=Root.selected_cheat}
					news_event={id=hosttool.1}
				}
				clear_variable =ROOT.taker

			}

			add_cores_click = {
				every_state = {
					limit = {
						is_in_array = {
							array = ROOT.r56rp_tool_state_array
							value = THIS.id
						}
					}
					add_core_of = PREV.owner
				}
			}

			cheat1_click={if={limit={Root={has_country_flag=cheating}} set_variable={Root.selected_cheat=1} ROOT={clr_country_flag=cheating}} else={ROOT={set_country_flag=cheating}}
			}
			cheat2_click={set_variable={Root.selected_cheat=2} ROOT={clr_country_flag=cheating}}
			cheat3_click={set_variable={Root.selected_cheat=3} ROOT={clr_country_flag=cheating}}
			cheat4_click={set_variable={Root.selected_cheat=4} ROOT={clr_country_flag=cheating}}
			cheat5_click={set_variable={Root.selected_cheat=5} ROOT={clr_country_flag=cheating}}
			cheat6_click={set_variable={Root.selected_cheat=6} ROOT={clr_country_flag=cheating}}
			cheat7_click={set_variable={Root.selected_cheat=7} ROOT={clr_country_flag=cheating}}
			cheat8_click={set_variable={Root.selected_cheat=8} ROOT={clr_country_flag=cheating}}
			cheat9_click={set_variable={Root.selected_cheat=9} ROOT={clr_country_flag=cheating}}
		}
		properties = {
			toogle_mark={
				frame = host_mark_status
			}

			ht_TAG_1 = {
				image = [?ROOT.r56rp_ht_tag_1.GetFlag]
			}
			ht_TAG_2 = {
				image = [?ROOT.r56rp_ht_tag_2.GetFlag]
			}
		}

		triggers = {

			

			observer_click_enabled = {
				owner = {
					is_ai = no
				}
			}
			free_country_click_enabled = {
				owner = {
					is_subject = yes
				}
			}


			add_cheat_click_enabled = {check_variable={Root.selected_cheat>0}}
			cheat1_visible={}
			cheat1_text_visible={}
			cheat2_visible={ROOT={has_country_flag=cheating}}
			cheat3_visible={ROOT={has_country_flag=cheating}}
			cheat4_visible={ROOT={has_country_flag=cheating}}
			cheat5_visible={ROOT={has_country_flag=cheating}}
			cheat6_visible={ROOT={has_country_flag=cheating}}
			cheat7_visible={ROOT={has_country_flag=cheating}}
			cheat8_visible={ROOT={has_country_flag=cheating}}
			cheat9_visible={ROOT={has_country_flag=cheating}}
			cheat2_text_visible={ROOT={has_country_flag=cheating}}
			cheat3_text_visible={ROOT={has_country_flag=cheating}}
			cheat4_text_visible={ROOT={has_country_flag=cheating}}
			cheat5_text_visible={ROOT={has_country_flag=cheating}}
			cheat6_text_visible={ROOT={has_country_flag=cheating}}
			cheat7_text_visible={ROOT={has_country_flag=cheating}}
			cheat8_text_visible={ROOT={has_country_flag=cheating}}
			cheat9_text_visible={ROOT={has_country_flag=cheating}}
			
			clear_all_markings_click_enabled = {
				
			}
			award_states_click_enabled = {
				
			}
			annex_country_click_enabled = {
				
			}
			puppet_country_click_enabled = {
				
			}
			add_cores_click_enabled = {
				
			}

		}

	}

	
}
